<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:controls="clr-namespace:MetroTrilithon.UI.Controls">

	<Style TargetType="{x:Type controls:SortButton}">
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="BorderBrush"
				Value="{DynamicResource BorderBrushKey}" />
		<Setter Property="Background"
				Value="{DynamicResource BackgroundBrushKey}" />
		<Setter Property="Foreground"
				Value="{DynamicResource ForegroundBrushKey}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="FocusVisualStyle"
				Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SortButton}">
					<Border BorderThickness="{TemplateBinding BorderThickness}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}">
						<StackPanel Orientation="Horizontal"
									Margin="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<ContentPresenter />
							<Path x:Name="SortDirectionArrow"
								  Data="M5,0 L10,8 L0,8 z"
								  Width="10"
								  Height="8"
								  Stretch="Fill"
								  Fill="{TemplateBinding Foreground}"
								  VerticalAlignment="Center"
								  RenderTransformOrigin="0.5,0.5">
								<Path.RenderTransform>
									<RotateTransform Angle="0" />
								</Path.RenderTransform>
							</Path>
						</StackPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Direction"
								 Value="None">
							<Setter TargetName="SortDirectionArrow"
									Property="Visibility"
									Value="Collapsed" />
						</Trigger>
						<Trigger Property="Direction"
								 Value="Descending">
							<Setter TargetName="SortDirectionArrow"
									Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource ActiveBackgroundBrushKey}" />
				<Setter Property="BorderBrush"
						Value="{DynamicResource ActiveBorderBrushKey}" />
				<Setter Property="Foreground"
						Value="{DynamicResource ActiveForegroundBrushKey}" />
			</Trigger>
			<Trigger Property="IsPressed"
					 Value="True">
				<Setter Property="Background"
						Value="{DynamicResource AccentBrushKey}" />
				<Setter Property="BorderBrush"
						Value="{DynamicResource ActiveBorderBrushKey}" />
				<Setter Property="Foreground"
						Value="{DynamicResource AccentForegroundBrushKey}" />
			</Trigger>
			<Trigger Property="IsEnabled"
					 Value="False">
				<Setter Property="Background"
						Value="{DynamicResource InactiveBackgroundBrushKey}" />
				<Setter Property="BorderBrush"
						Value="{DynamicResource InactiveBorderBrushKey}" />
				<Setter Property="Foreground"
						Value="{DynamicResource InactiveForegroundBrushKey}" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
